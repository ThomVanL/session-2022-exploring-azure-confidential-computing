{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.9.1.41621",
      "templateHash": "4503113491071338284"
    }
  },
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Virtual Machine."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Required. Location of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Required. Admin username of the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
      "type": "secureString",
      "metadata": {
        "description": "Required. Password or ssh key for the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DC2as_v5",
      "allowedValues": [
        "Standard_DC2as_v5",
        "Standard_DC2ads_v5",
        "Standard_EC2as_v5",
        "Standard_EC2ads_v5"
      ],
      "metadata": {
        "description": "Optional. Size of the VM."
      }
    },
    "osImageName": {
      "type": "string",
      "defaultValue": "Ubuntu 20.04 LTS Gen 2",
      "allowedValues": [
        "Windows Server 2022 Gen 2",
        "Windows Server 2019 Gen 2",
        "Ubuntu 20.04 LTS Gen 2"
      ],
      "metadata": {
        "description": "Optional. OS Image for the Virtual Machine"
      }
    },
    "osDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "StandardSSD_LRS"
      ],
      "metadata": {
        "description": "Optional. OS disk type of the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Optional. Type of authentication to use on the Virtual Machine."
      }
    },
    "bootDiagnostics": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Optional. Enable boot diagnostics setting of the Virtual Machine."
      }
    },
    "securityType": {
      "type": "string",
      "defaultValue": "DiskWithVMGuestState",
      "allowedValues": [
        "VMGuestStateOnly",
        "DiskWithVMGuestState"
      ],
      "metadata": {
        "description": "Optional. Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. NOTE: It can be set for only Confidential VMs."
      }
    }
  },
  "variables": {
    "imageList": {
      "Windows Server 2022 Gen 2": {
        "publisher": "microsoftwindowsserver",
        "offer": "windowsserver",
        "sku": "2022-datacenter-smalldisk-g2",
        "version": "latest"
      },
      "Windows Server 2019 Gen 2": {
        "publisher": "microsoftwindowsserver",
        "offer": "windowsserver",
        "sku": "2019-datacenter-smalldisk-g2",
        "version": "latest"
      },
      "Ubuntu 20.04 LTS Gen 2": {
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-confidential-vm-focal",
        "sku": "20_04-lts-cvm",
        "version": "latest"
      }
    },
    "cloudInitData": "I2Nsb3VkLWNvbmZpZwpwYWNrYWdlX3VwZ3JhZGU6IHRydWUKcGFja2FnZXM6CiAgLSBbYnVpbGQtZXNzZW50aWFsLCAxMi44dWJ1bnR1MV0KICAtIFtjbWFrZSwgMy4xNi4zLTF1YnVudHUxXQogIC0gW2dpdCwgMToyLjI1LjEtMXVidW50dTNdCiAgLSBbbGliY3VybDQtb3BlbnNzbC1kZXYsIDcuNjguMC0xdWJ1bnR1Ml0KICAtIFtsaWJqc29uY3BwLWRldiwgMS43LjQtMy4xdWJ1bnR1Ml0KcnVuY21kOgogIC0gZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9UaG9tVmFuTC9jb25maWRlbnRpYWwtY29tcHV0aW5nLWN2bS1ndWVzdC1hdHRlc3RhdGlvbi5naXQKICAtIHdnZXQgaHR0cHM6Ly9wYWNrYWdlcy5taWNyb3NvZnQuY29tL3JlcG9zL2F6dXJlY29yZS9wb29sL21haW4vYS9hemd1ZXN0YXR0ZXN0YXRpb24xL2F6Z3Vlc3RhdHRlc3RhdGlvbjFfMS4wLjJfYW1kNjQuZGViIC0tZGlyZWN0b3J5LXByZWZpeD0vb3B0CiAgLSBkcGtnIC1pIC9vcHQvYXpndWVzdGF0dGVzdGF0aW9uMV8xLjAuMl9hbWQ2NC5kZWI=",
    "virtualNetworkName": "[format('{0}-vnet', parameters('vmName'))]",
    "subnetName": "[format('{0}-vnet-sn', parameters('vmName'))]",
    "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "isWindows": "[contains(parameters('osImageName'), 'Windows')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-02-01",
      "name": "[format('{0}-ip', parameters('vmName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-02-01",
      "name": "[format('{0}-nsg', parameters('vmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "[if(variables('isWindows'), 'RDP', 'SSH')]",
            "properties": {
              "priority": 100,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[if(variables('isWindows'), '3389', '22')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-09-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-07-01",
      "name": "[format('{0}-nic', parameters('vmName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetResourceId')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-ip', parameters('vmName')))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-ip', parameters('vmName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "[parameters('bootDiagnostics')]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]",
              "securityProfile": {
                "securityEncryptionType": "[parameters('securityType')]"
              }
            }
          },
          "imageReference": "[variables('imageList')[parameters('osImageName')]]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "customData": "[if(not(variables('isWindows')), variables('cloudInitData'), json('null'))]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), createObject('disablePasswordAuthentication', 'true', 'ssh', createObject('publicKeys', createArray(createObject('keyData', parameters('adminPasswordOrKey'), 'path', format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername')))))))]",
          "windowsConfiguration": "[if(not(variables('isWindows')), json('null'), createObject('enableAutomaticUpdates', 'true', 'provisionVmAgent', 'true'))]"
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "ConfidentialVM"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
      ]
    }
  ]
}